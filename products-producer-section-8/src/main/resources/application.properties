spring.application.name=products-producer-section-6

server.port=8080

spring.kafka.producer.bootstrap-servers=localhost:9092,localhost:9094,localhost:9096
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer

# To configure acknowledgement mode
# This property is related to min.insync.replicas configured to com.acme.common.config.kafka.KafkaConfig class
spring.kafka.producer.acks=all

# To specify the number of retries to send the message to Kafka broker
# Default value is 2, 147 483 647
spring.kafka.producer.retries=5

# To specify the time in milliseconds to wait before retrying to send the message to Kafka broker among retries
# It is the time interval between retries
# Default value is 100
spring.kafka.producer.properties.retry.backoff.ms=5000

# Default value is 1000
spring.kafka.producer.properties.retry.backoff.max.ms=10000

# To specify the maximum timeout in milliseconds to wait response for all replicas after sending the message
# including retry operations. This property specifies the time for entire process which includes:
# 1.- Time to send the request
# 2.- Time to wait for acknowledgement and
# 3.- Time to retriable sent failures.
# This value have to be greater than spring.kafka.producer.properties.request.timeout.ms property value
spring.kafka.producer.properties.delivery.timeout.ms=60000

# To specify the maximum time in milliseconds that producer waits for additional messages before to send
# the current batch. See "spring.kafka.producer.properties.batch.size" property.
# Default value is 0 which means that the producer does not wait for additional messages and sent the message
# as soon as there is a sender thread available to send them.
spring.kafka.producer.properties.linger.ms=0

### Check how to work this property ###
# To specify the maximum size in bytes to control the amount of memory in bytes (not messages!)
# that will be used for each batch.
# Default value is 16384
spring.kafka.producer.properties.batch.size=10

### Check how to work this property ###
# To specify the maximum time in milliseconds that producer waits for response for broker after sending the message
spring.kafka.producer.properties.request.timeout.ms=15000

# To prevent duplicate messages. However, this configuration depends on the others properties which are:
# 1.- spring.kafka.producer.acks=all
# 2.- spring.kafka.producer.properties.max.in.flight.requests.per.connection=5 (less than or equal to 5)
# Default value is true
spring.kafka.producer.properties.enable.idempotence=true

# This setting basically controls how many requests can be made in parallel to any partition, and so,
# by default that setting is 5, which explains why you can have some reordering, but you have to set it to 1
# if you want to strictly ensure ordering. Obviously, by setting it to 1, you may get an impact on the throughput.
# But if you use the Kafka Version >= 0.11 for brokers and clients, then there's a better solution
# which is Idempotent Producer. If not, then be careful. If you set retries to a high number and you want to keep ordering,
# then you absolutely need to set **max.inflight.requests.per.connection=1**.
# This value must not be greater than 5
spring.kafka.producer.properties.max.in.flight.requests.per.connection=5